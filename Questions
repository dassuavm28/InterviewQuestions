================================================================================================
#
#       Morgan Stanley Interview Questions                                     
#
================================================================================================

1.	Explain about BigDecimal and how is it different from 'double' with the use cases about where to use it. 
2.	Pass By Value / Pass By Reference in Java?
   Answer : https://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value
   
3.	When should we use a LinkedList vs ArrayList?
4.	What is the time complexity of an ArrayList and LinkedList?
5.	What is the time complexity of addition of an item to an Arraylist, Hashmap and LinkedList?
6.	What is the time complexity - if we add an element at beginning of an ArrayList? Also In case of LinkedList? 
7.	What is time complexity - O(n) to find the length of Linked List? 
8.	How is HashSet implemented – Internal working?
9.	How HashMap is implemented – Internal working?
10.	 How does Get and Put work in an HasMap?
11.	I have a hash map, how do I sort it based on values? e.g. I have a hash map, of employee => DOB, how to find out people who were born in March. 
12.	What is the purpose of the hashCode() method? When would you need to override it?
13.	What is the relationship between hashCode() and equals()?
14.	What is a hash collision?
15.	How to avoid a hash collision?
16.	When to use a HashMap vs ConcurrentHashMap? 
17.	 What is the difference between using a HashMap in a synchronized block vs ConcurrentHashMap?
18.	What is meant by fail safe and fail fast iterators ?
19.	Will Adding or Removing elements from a non-concurrent collection cause an Exception? If yes, what Exception.
20.	How does insertion into a TreeMap work?
21.	What is the structure of JVM? What are the different components within the architecture? (garbage collection, heap, etc, where does variables go, static variables go, etc.)
22.	What is PermGen space, Heap space
23.	Types of garbage collectors available in Java.
24.	How does Garbage Collection work? 
25.	Features of Java 9,10, 11 
26.	How to make a class immutable?
27.	Memory Management in Java - What does a Memory leak happen in Java? Will this cause memory leak - public static List<Double> list = new ArrayList<>(); ?

	Java does automatic Garbage collection. However there can be situations where garbage collector does not collect objects because there are references to them. There might be situations where an application creates lots of objects and does not use them. Just because every objects has valid references, garbage collector in Java can’t destroys the objects. Such types of useless objects are called as Memory leaks. If allocated memory goes beyond limit, program will be terminated by rising OutOfMemoryError. Hence if an object is no longer required, it is highly recommended to make that object eligible for garbage collector. Otherwise We should use some tools that do memory management to identifies useless objects or memory leaks like: 
	HP OVO
	HP J METER
	JProbe
	IBM Tivoli

28.	What does the static keyword mean?
	The static keyword belongs to the class than an instance of the class. The static keyword is used for a constant variable or a method that is the same for every instance of a class.
29.	How are Static Blocks initialized in Java? 
30.	What is the difference between final, finally, finalize?
31.	What is Big(O) notation ? 
32.	 
Concurrency
1.	Any experience on Multi-threading? What happens if a thread is started again (Illegal thread exception)
2.	What is the concurrency level (default 16)
3.	 Happens-Before relationship
o	https://www.logicbig.com/tutorials/core-java-tutorial/java-multi-threading/happens-before.html
o	https://docs.oracle.com/javase/tutorial/essential/concurrency/memconsist.html
4.	Happens-After relationship
5.	What is volatile – use cases – Why volatile is called volatile?
o	https://www.baeldung.com/java-volatile
6.	What is the difference between == and .equals?
7.	 
8.	What is the difference between an abstract class and an interface?
9.	What is the difference between checked and unchecked exceptions and how would you handle them?
10.	SOLID principles what are they?

	S - Single responsibility - a class should have only single responsibility and should have one and only one reason for change.
	O - Open closed principal - a class should be open for extension but closed for modification.
	L - Liskov substitution - Object in a program should be replacable with instances with their sub types without altering the correctness of the program.
	I - Interface segrigation - Segrigate interfaces as per the requirement rather than one general perpouse implementation.
	D - Dependency Inversion - Should depend on abstractions rather than concreat implementations.
	
11.	 what's problem in below code
@PostMapping

public void trades (Trade trade) {

saveToDB(trade);

publishToService(trade);

}
Hibernate
1.	Define eager and lazy fetch types and which one to use for one to many relationships 
2.	Relational DB – expect some basic questions like how indexing works
Microservices
________________________________________
1.	 How does a Microservice differ from SOA?
2.	How would you create a Springboot project?
3.	What is an Actuator? What is it used for?
4.	What is Environment in Spring boot?
o	https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/env/Environment.html
5.	What is Transactional in Spring – Typical scenario – A method having Transactional annotation – what would happen 2 threads are spawned from it. – How transaction means here in case of threads 
o	https://dzone.com/articles/how-does-spring-transactional
6.	How to check the health of spring boot application
7.	What are the metrics you are concerned about from Actuator?
Devops
________________________________________
1.	CI CD pipeline – How will I implement – what is the thought process?
o	https://dzone.com/articles/learn-how-to-setup-a-cicd-pipeline-from-scratch
2.	What are steps for Jenkins setup from new projects? 
3.	What are the ways to perform CI/CD?
4.	How is a Jenkins pipeline built?
5.	How you deploy in prod - Git , CI / CD pipeline 
6.	 
Cloud
________________________________________
1.	IaaS vs PaaS vs SaaS
2.	How is migration to cloud planned
AWS questions
________________________________________
1.	How do we scale up a service on AWS
2.	How is a Docker image deployed to AWS EC2?
3.	How are objects in S3 stored and what is the consistency model it follows. 
4.	How is the health check of an application performed when it is deployed in ECS? How to know if an application is working fine? 
5.	How does an application load balancer distribute the load across instances? 
6.	How are different environments managed in AWS?
Messaging
________________________________________
1.	Kafka and Other messaging tools – MAF/Mule – what is the advantage?  
2.	What will happen in the case of Kafka and other messaging – if a message is sent and retrieved from consumer   
3.	Kafka related questions, like partitioning, how to guarantee the correct sequence of messages is received by the consumer
4.	Kafka basics how do you make sure the messages delivered in order
5.	 Kafka listener
Containers and Orchestration
________________________________________
1.	How to scale up/down in Kubernetes
2.	How does Kubernetes manage failovers
3.	How does deployment work in Kubernetes
4.	What is a service in Kubernetes?
5.	File  Structure in Docker
6.	How is a Docker image built?
7.	What is the first instruction on a Docker file?
8.	Spring Boot fat jar - ENTRYPOINT
Code share question bank
 
________________________________________
Algorithms
1.	convert a number to literal (e.g. 23 should be converted to twenty-three)
2.	reverse a number without using strings
3.	Find Clock Angle
4.	Find if the string is an anagram
5.	Find some window moving average
6.	Rotate matrix by 90 degrees
7.	Programme to solve the [1, 3, 4, -3, 2] if you start jumping based on the value array element in how many steps, can come out. Negative numbers go back.
8.	Write a pseudo code for strategy pattern.
9.	Write a pseudo code for TreeMap implementation.
10.	Questions on binary tree
11.	Complexity of treemap implementation.
12.	Find the next index in Load Balancer which is using Round Robin Technique
/*RoundRobinLoadBalancer*/

 

Class Loadbalancer{

 public static int calculateNextIndexPositionToBeAssigned{

/*get the next index in a RoundRobinLoadbalancer to put an instance into*/  



}
Fill in gaps programs
1.	Implement Redis Cache
2.	Implement load balancer
Others
public List<String> findClosestAddresses(File addresses, String hotelAddres) {}; 
The problem to solve was, how would you read the file and write the solution to find closest addresses to the given address. No API's given nothing, you basically can use whatever you want, I believe they want to see how you approach this problem. Again depends on which approach you choose and you and interviewer will decide on the file structure and how to extract the distance. Once you agree on this you start implementing the business logic for returning the List<String> of closest addresses 

====================================================================
Ericsson Syllabus
====================================================================
Telecom basic, 5G, cloud native and cloud ready
DevOps
Pipeline
Threading
Performance tuning
Code security
=====================================================================

================================================================================================
#
#      ## Ericsson interview questions                                
#
================================================================================================


-------------------------------------------------------------------------------------------------------------------------------------------------------------

1) What is your techinology stack, current role ?
2) What is the architechture of your project?
3) If your application/microservice is working with an external system, and that system takes a lot of time to come back. How do you fix this? 
   ( Let's say the external system is another microservice, or another API or a DB call. Or a JMS call )
4) If there is a database query, or procedure, that is taking too long time, how will you fix it?
5) Did you work with any JMS? 
6) What JMSs you have worked with?
7) What is a Topic in JMS?
8) What is a Queue in JMS?
9) Can you give real life example of topic and queue?
10) If I want to tell my JMS that if the message is not processed, then rollback the whole activity, what is the way to do that? --> Answer : use acknowledgement mode.
11) What is message persistence in JMS?
12) How does message persistence work in JMS? When the consumer is dmamaged, and there are lot of messages in the persistence, what will happen to the messages? How will
    you handle this kind of problme and scenario?
13) Scenario based problem : Let's say you have to process 500 transactions per second. The transactions will come and they have to be processesed to 5 downstream applications
    like east bound, north bound, south bound, west bound. Now how will you design your application?
14) In the above scenario, as an architect of the project, 
    a) what technology will you use?
    b) what hardware and architechture will you use?
    c) what will be your chosen team size? Who will be in the team?
    d) How much time will you need to complete this activity, with the team?
    e) How will you handle the costing of the project?
    
15) What is a load balancer? 
16) How many types of load balancers are there?
17) Which types of load balancers did you use?
18) In the project architechture, where is the load balancer placed actually?
19) When programming for JMS ( Like ActiveMQ or JbossMq ) what are the main components to be taken care in program? 
     --> Answer : Queue, Topic, publisher, QueueConnection, TopicConnection, QueueConnectionFactory, 
     TopicConnectionFactory and ultimately the JNDI registry, that will be used for registration.
     
20) How is distributed session management done in microservice? Any tool/software that you have used to do distributed session management?
    --> Answer : Use Redis or Hazelcast. Redis is more used. Do some reading on Redis.
	https://www.javainuse.com/spring/springboot_session_redis
     
21) When working with JbossMQ, what is the main configuration file? What is the main configuration file for Websphere MQ? What is the main configuration file for apache
    Kafka?
    
    
    
================================================================================================
#
#    $$ Accenture third round interview.                               
#
================================================================================================
    


====================================================

1) What is classloader? How many types of classloader are there?
2) What are the disadvantages of hibernate?
3) What is Spring? Which different modules of Spring did you use?
4) which different design patterns did you use?
5) Did you use cloud? Which one?
6) Did you use EJB?
7) What is a container?
8) Did you use creational design patterns? 
9) What is a factory design pattern?
10)What are other design patters?
11)Did you use Security? What kind of security did you use?
12)What is token based authentication and what is certificate based authentication?
13)What are the differences between token based authentication and certificate based authentication?
14)Did you use any database? What databases did you use?
15)Did you write procedure, complex query, function, trigger?
16)What is a digital signature?
17)What are the differences betweeb SOAP protocol and REST protocol? Why use them? 
18)In whihc scenarios to use SOAP and in which scenarios to use REST?
19)Authentication in SOAP and REST. Please explain.
20)What are the real life example of different design patterns? 
21)Real life scenario problem
-----------------------------
     Let's say in a planet there are two typoes of humans. 
         a) Super Humans
         b) Normal humans
      Normal human can eat, sleep, walk, run etc. Super human can do all the things of normal human + additional activites like fly, long long jump etc. 
      Now, if a normal human does good to other humans, then he is promotoed to super human. But if super human does wrong things, he is demoted to normal human beings.
      
      How will you design the solution ot the above problem? What technology componenets will you use and what will be the solution?
      
      
$$ Capgemini UK interview
--------------------------------
1) What do you understand by multiple inheritance?
2) WHat is an interface default method?
3) Hands on programming challenge. Multiple implementaions and test those.
4) If two interfaces have the same default methods, with the same method signature, and you have one class that implements both the interfaces.
   Then which method will be executed by the class?
   
   Java 8 supports default methods where interfaces can provide a default implementation of methods. 
   And a class can implement two or more interfaces. In case both the implemented interfaces contain default methods with the same method signature, 
   the implementing class should explicitly specify which default method is to be used, or it should override the default method. 
   The rule is that the class implementing the duplicate default methods 'must' override the implementation
   
5) Will the above give any compilation error/problem? If yes, how will you resolve that problem?
6) How is multiple inheritance supported by java?

	Default methods in Java 8 can be viewed as a form of multiple inheritance (except that attribute can not be inherited).
	The main motivation behind default methods is that if at some point we need to add a method to an existing interface, 
	we can add a method without changing the existing implementation classes. In this way, the interface is still compatible with older versions. 
	This is a cool feature. However, we should remember the motivation of using Default Methods and should keep the separation of interface and implementation.
	
7) Which java 8 features did you use?
8) What is stream?
9) How will you filter a list of employees, who have salary greater then 10,000 pounds?
10) What is a map operation in Java 8 ? What are the differences between mapping and filtering in Java 8?
11) Did you use multithreading? How did you do multithreading?
12) If I want to create 10 different threads, then how will you do that?
13) Did you use executor service?
14) What is singleton pattern? How is it implemented in the java classes?
15) Like Singleton, instead of one, if I want to make only two instances of my class then how will I do it?
16) What other design patters did you use?

Spring
-------
17) What design patterns are used in Spring?
18) What are the main componenets of Spring?
19) In Spring rest, how did you do authentication?
20) What are the different HTTP methods? 
21) What are difference between PUT and PATCH?

	PUT is a method of modifying resource where the client sends data that updates the entire resource . 
	PATCH is a method of modifying resources where the client sends partial data that is to be updated without modifying the entire data.
	
22) What are the diferrences between PUT, POST and PATCH?
23) In authentication, what is token based authentication?
24) In a JWT token, how many parts are there? --> Ans : header, payload, signature.

Security
----------
25) Did you implement security in your software? What kind of security did you do?
26) What is the difference between certificate based, token based, and basic authentication?
27) What are the differences between symmetric key and asymetric key?
28) When there is certificate related problem in your application, how do you troubleshoot the
    problem?
    
 29) which clouds did you use?
 30) Which services of cloud?


================================================================================================
#
#    
####  JP morgan Chase - UK - Software Engineer - Fullstack                      
#
================================================================================================
    

======================================================================================
Core Java
--------

1) Did you work with Java 8? What are the features of Java 8?
2) Hands on exercise - 
          You are given two arryas of intgers. { 1, 2, 5, 4, 3 } and {3, 4, 6, 7} ; You have get a single List/Array back, which has all the 
          unique elemensts of the above array. The result should be sorted. You can not use Set interface. Write the program to do it.
          
3) A sample small program was given. The program method is given below.
    ------------------------------------------------------------------------
     
     public int function( int x ) {
       if ( x == 0 ) {
        return 1;
       }
       return ( x * function( x - 1 ) ) ;
      }
     
   ------------------------------------------------------------------------
     a) What does the program do? Ans : It is a factorial calculator.
     b) What are the bugs in the program? Ans : Does not check for null and negetive input
     c) How will you fix the bugs? Ans : Put a null check and a negetive check before the recursive method call.
     d) If the bugs are not fixed, then what error/exception will be the outcome? Ans : A Stack Overflow error.
     
 
  Spring/Spring Boot
  -------------------
  4) What are the different Spring bean scopes?
  5) What will happen if I put a prototype scope bean inside a singleton scope bean?
  6) Let us say that you have two beans. One is the School bean and the other one is the Student bean. The student bean is prototype scope and the student bean is
     Default ( singleton ) scoped.
        a) Which bean will be loaded first? Why?
        b) Each time there is a request, the prototype will be instantiated. But what will happen to the mother bean? Will it be instantiated 
           every time, or the same instance will ge used? 
        c) Let's say the School bean has getters and setters for the Student bean. Now if we call getStudent, what object will it return? Will it return
           a new object evrytime or will it return the same student object? How will the instantiation work here?
           
         d) How will you ensure that e prototype is created every time a method of the nested prototype is called by the mother sinlgeton bean?
         
          Answer  :
          -------------
          @Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE, proxyMode = ScopedProxyMode.TARGET_CLASS )
          Explanation : The proxyMode = ScopedProxyMde.TARGET_CLASS will be used to trigger methods, importantly from a new instance of the PROTOTYPE scoped bean.
           
   7) In Sevrlet/JSP, what is the file that we used for web context configuration? Ans : web.xml
   
   
   Design Patterns
   ----------------
   
  8) Let's say I have an employee and the designation of the empoyee is a property. The designation of the employee can change over time to time.
     The designation can be contractor/Full-Time/Manager/Architect. But the role can change.
         a) How will you do the design of the objects?
         b) Which design patterns will you use to solve this problem?
         c) Which classes will be concrete and which will be abstract/interface? And why?
            Justify your design.
            
 9) What are the differences between state pattern and strategy pattern?
 10) Which patterns will you use in this case?
 
 Spring Security
 ------------------
 11) Did you work with authentication, authorization? What is the difference between them?
 12) Did you work with OAuth authentication mechanism?
 13) How did you implement security check in Spring Rest Side? Ans : Spring Security module. 
 14) Did you use token based authentication?
 15) How can you parse the token in the back end and validate it?
 
 HIbernate
 -------------------
 16) Hibernate does a query. If the same query is fired again, will hibernate go to the DB, or what will it do?
 
 Kafka
 --------------
 17) What are partitions in Kafka?
 18) What are topics in Kafka?
 19) If a topic is partitioned, then how will the messages be delivered to the partitions? Will the message go to every partition of the topic?
 20) How are the subscribers arranged to Kafka? All the subscribers listen to the same partition, or not?
 21) Are the topics instance level, or cluster level? 
 22) Are the partitions instance level, or cluster level?
         
 AWS
 --------------------------
 23) Which services of AWS did you use?
 24) How many kinds of storages are there in S3? Which stoarges did youuse?
 25) How does S3 store the data ( As SQL or Documents, or how ) ?
 26) In order to identofy the stored document, what kind of identifier did you use? 
 27) How did you store the above identifiers in the system?
 


=======================================================================================
#
#  Ericsson Second Round Interview
#
======================================================================================

1) What Exception will you get when you divide an int with zero? 
   Answer : Arithmatic**OperationException
   
2) What exception will you get if you divide a long or float by zero? Why difference?
	In order to handle cases like these, Java uses some special numeric values that can represent the results of such an operation: NaN, POSITIVE_INFINITY, and NEGATIVE_INFINITY.
3) How are the incoming requests mapped to the servlets? 
4) When there is an incoming request, how does it come to the RestFul controller?
5) When hibernate fires the same query for the second time, does ot go to the DB or it hits the cache and gives back the result?


===================================================================================================================
#
#  NatWest UK Position - First Round of interview
#
====================================================================================================================
1) What do you understand by real time processing of data?
2) In RestFul service, say one service is called first. Then in parallel other services are called. How will you deal with this design problem?
3) Current Project, generic questions


=================================================================================================================
#
# Ericsson Kolkata Second Round - Technical ( I remeber the panelist - Nilashish Nundy )
#
==================================================================================================================

1) What are the roles and responsibility you are playing in current project?
2) Did you work with Cassandra? What is it, how does it work?
3) Did you work with any other NoSql database?
4) Did you work with Couchbase?
5) If you have to increase overall throughput of your application, how will you do it?
6) Did you use Apache Camel? 
7) How did you use Camel? What are main drawbacks or disadvantages of Camel, when compared to other frameworks?
8) Did you write Camel configuration with DSL? How did you do it?


=================================================================================================================
#
# ThoughtWorks - Code Pairing Round
#
==================================================================================================================

1) An already existing codebase was given. The codebase was given before two days from interview. In the interview I was asked to pick a task from 
Sprint board and do code modification on it.

ThoughtWorks - Technical Interview
---------------------------------------------------------------
1) Started with - In recent time, what piece of work did you enjoy the most
   Answer : The migration of API from MD2 to private cloud.
2) How did you do? What are the points that you will improve if you have to do that again?
3) How did you implement the PKI certificate based authentication of the API?
4) How did you improve the build/deploy pipeline ( Jenkins ) to adapt to the private cloud environment?
5) Apart from Java/Microservice stack, did you work in any other language ( like python, scala, groovy, kotlin ) stack? 
   If not, why? Would you like to work in any other stack? Why?
6) What changes were done to deployment mechanism when moved to private cloud from on-premises infrastructure?

============================

CTS Off shore Questions
===========================

1)Explain Functional  interface, Default method, method reference?
2)How to overload and override main method in Java?

Yes, We can overload the main method in java but JVM only calls the original main method, it will never call our overloaded main method.

3)What will be the end result of .filter() operation in stream API?

Returns a stream consisting of the elements of [a given] stream that match the given predicate.
The filter method essentially selects elements based on a condition you provide. That's why the filter (Predicate condition) accepts a Predicate object, 
which provides a function that is applied to a condition. If the condition evaluates true, the object is selected. Otherwise, it will be ignored.

4)What is Predicate in java 8?
In Java 8, Predicate is a functional interface, which accepts an argument and returns a boolean. Usually, it used to apply in a filter for a collection of objects.

5)Different between finally and finalize?
6)Explain Optional of() method in Java with examples?

The of() method of java.util.Optional class in Java is used to get an instance of this Optional class with the specified value of the specified type.
// create a Optional
Optional<Integer> op = Optional.of(9455);
// print valuel
System.out.println("Optional: " + op);
Output: Optional: Optional[9455]

7)What happens when we declare a thread inside main method in java, what are the active threads are there in the program?
8)Explain @SpringbootApplication annotation?
9)Advantage and disadvantage of resttemplate and feignclient?


Using Feign-clients over rest-templates has number of advantages. I will list down those below.
The developer need not worry about the implementation. Just to create abstract Feign interface and few annotations - declarative principle. (If you want customized configuration, then it will hold some code)

• With Spring Cloud Eureka, Ribbon client-side load-balancer will be equipped with Feign client.
• No need to worry about the unit test, because there is no implementation from you to test. (Arguable)
• Supports Feign annotations and JAX-RS annotations.
• Highly compatible and easily configurable with Spring Cloud (Specially with Eureka server registry)
• Allows Feign client configuration via @Configuration class or application properties.
• Allows us to add interceptors. (Add interceptors via @Configuration or application properties. Alternatively can use Spring Cloud provided interceptors as well. 
Example - BasicAuthRequestInterceptor)
• Hystrix support for fall-back mechanism.
• Logging
• Error handling
Feign is a good choice, If you are fascinated with JPA and the way how it resolves your queries, 
then Feign is the tool for you. Feign will handle your server requests perfectly fine.
RestTemplate is used for making the synchronous call. When using RestTemplate, the URL parameter is constructed programmatically, 
and data is sent across to the other service. In more complex scenarios, we will have to get to the details of the HTTP APIs provided by 
RestTemplate or even to APIs at a much lower level.Feign is a Spring Cloud Netflix library for providing a higher level of abstraction over 
REST-based service calls. Spring Cloud Feign works on a declarative principle. When using Feign, we write declarative REST service interfaces at the client, 
and use those interfaces to program the client. The developer need not worry about the implementation ...

10)Explain springboot Actuator?
11)How to Changing the Logging Level at the Runtime for a Spring Boot Application?

We're going to start by using the /loggers Actuator endpoint to display and change our logging level. 
The /loggers endpoint is available at actuator/loggers and we can access a specific logger by appending its name as part of the path.
For example, we can access the root logger with the URL http://localhost:8080/actuator/loggers/root.
To change the logging level, we can issue a POST request to the /loggers endpoint:
curl -i -X POST -H 'Content-Type: application/json' -d '{"configuredLevel": "TRACE"}' http://localhost:8080/actuator/loggers/com.baeldung.spring.boot.management.logging HTTP/1.1 204 Date: Mon, 02 Sep 2019 13:56:52 GMT

12)Can we use .yml and .properties  both in single springboot  application?

Yes You can use both at same time in same project.
When you use both YML and properties at same time, say for example
application.yml and application.properties at same time in same
project, first application.yml will be loaded later
application.properties will be loaded.
Important point to be noted is that if application.yml and application.properties have same keys 
for example in application.yml has spring.app.name = testYML and application.properties has spring.app.name = testProperties at same time in same project, 
then application.yml value will be overwritten by application.properties value since it is loading at last.
And the value in spring.app.name = testProperties.


=============================================
Ericsson - Kolkata - First Round
=============================================

1) What is the new change brought in terms of memory in java 8?

Simply put, Metaspace is a new memory space – starting from the Java 8 version; it has replaced the older PermGen memory space. The most significant difference is how it handles memory allocation.
Specifically, this native memory region grows automatically by default.We also have new flags to tune the memory:

MetaspaceSize and MaxMetaspaceSize – we can set the Metaspace upper bounds.
MinMetaspaceFreeRatio – is the minimum percentage of class metadata capacity free after garbage collection
MaxMetaspaceFreeRatio – is the maximum percentage of class metadata capacity free after a garbage collection to avoid a reduction in the amount of space
Additionally, the garbage collection process also gains some benefits from this change. The garbage collector now automatically triggers the cleaning of the dead classes once the class metadata usage reaches its maximum metaspace size.

Therefore, with this improvement, JVM reduces the chance to get the OutOfMemory error.

2)What is the adapter design pattern and write an example.
3)Explain the singleton pattern and write the code.
4)Explain Double-Checked Locking with Singleton?
5)Problem- solution > suppose there is a cache of elements which can hold only 10 elements at a time
and after 10 sec cache needs to be cleared by 1 element and before insertion of each element the waiting time will be 10 sec- how to solve.

Use two threads , one will wait for 10 seconds after inserting an element and other will wait for 10 seconds before removing it from cache.

6) https://www.geeksforgeeks.org/producer-consumer-solution-using-threads-java/
7) Write a program to print fibonaccci seriese with java 8 stream api?
8) what is service dicovery and api gateway in microservice?
9) benifit of using microservice?
10) What is saga design pattern?
12) Explain the design patterns of microservice?
13) What is OAuth in spring security?
14) What is predicate and functional interface? different between map and flatMap? 
15) What is singleton design pattern and how to initialize it?
16) What is Heap Dump and Thread dump?

	A thread dump is a dump of the stacks of all live threads. Thus useful for analysing what an app is up to at some point in time, 
	and if done at intervals handy in diagnosing some kinds of 'execution' problems (e.g. thread deadlock).
	A heap dump is a dump of the state of the Java heap memory. Thus useful for analysing what use of memory an app is 
	making at some point in time so handy in diagnosing some memory issues, and if done at intervals handy in diagnosing memory leaks.
	
	A thread dump is a dump of all live threads at the instant the thread dump is taken. Thus useful for analysing execution problems e.g. thread deadlock.
	It is used when the server is hung and we want to see the threads executing and take their dump.
	A heap dump is a JVM facility that generates the dump of the state of the Java heap memory or live objects. Thus useful for analysing some memory issues.

17) What is deadlock in thread? how we can produce it? (solution - just need to modify the lock sequence of object locks)
18) What is heap memory? and what is heap dump?

	A heap dump is a snapshot of all the objects that are in memory in the JVM at a certain moment. They are very useful to troubleshoot memory-leak problems and optimize memory usage in Java applications.
	
19) If any issue arises or application gives poor performance what to check first? (Application log)
20) How garbage collection works internally in java?
21) How Hasmap works internally?
22) What is Rehashing? How Rehashing is done in has map? (https://www.geeksforgeeks.org/load-factor-and-rehashing/)
23) Difference between linkedList and ArrayList? (https://www.geeksforgeeks.org/arraylist-vs-linkedlist-java/)
24) What is the life cycle of spring bean?
25) can we use default method in functional interface? 
	You can have default methods in a functional interface but its contract requires you to provide one single abstract method (or SAM). 
	Since a default method have an implementation, it's not abstract. Conceptually, a functional interface has exactly one abstract method.
26) Can we overload main method? - Yes, We can overload the main method in java but JVM only calls the original main method, it will never call our overloaded main method.

================================================
Ericsson - Second Round - Kolkata
=====================================================

1) How Hashmap works internally?
2) Difference between concurrentMap and SynchronizedMap?
3) What is the default size of hashmap?(default size=16)
4) What is the default size of ArrayList and how it gets incremented?(default size=10
5) What is load factor in Arraylist?
6) What is CopyOnArrayList?
7) How to reverse and store a string without using the string reverse method?
8) What is consumer producer problem in thread and how to solve it?
9) What is the interface that lamda function use internally?
10) Suppose the is an arraylist of string object and we invoke stream operation on them. What are the limitations on them?
11) What is the difference between map and flatmap?
12) What is the difference between stream and parallel stream?
13) How to disable sipringboot autoconfiguration?
14) What is an actuator in springboot?
15) Can we run a springboot application as standalone java application?


	COGNIZANT - Project Interview
------------------------
•	Difference between interface and abstract class 
•	how to consume web-service, and how to access database. 
•	Did you use UML? what is the use of UML diagrams? 
•	What is iBatis? How did you configure iBatis? 
•	What is the difference between iBatis and Hibernate? 
•	How to configure iBatis entities from config file? 
•	What is the difference between primary key and unique key? 
•	If there are duplicate rows in DB, then how to access the duplicate records?

TCS - interview questions
------------------------------------
1)classloader in java?how it works?
2)How a hasmap can be made thread safe?
3)what are the differnnts ways of instanstiating objects?
4) What is the difference between ClassNotFoundException and NoClassDefFoundError? Which one is more fatal?
	
	ClassNotFoundException is an exception that occurs when you try to load a class at run time using Class.forName() or loadClass() methods 
	and mentioned classes are not found in the classpath. NoClassDefFoundError is an error that occurs when a particular class is present at compile time, 
	but was missing at run time.
	https://dzone.com/articles/java-classnotfoundexception-vs-noclassdeffounderro#
	
5) What are the different types of injection strategy available with Spring? ( Setter injection and Constructor injection )
6) Which injection mechanism is more preferable, and why?

	Setter injection overrides the constructor injection. If we use both constructor and setter injection, IOC container will use the setter injection.
	It doesn't create a new bean instance always like constructor. So setter injection is flexible than constructor injection.

7) If I inject a prototype scoped bean in a singleton bean, and then fetch the prototype bean from
the singleton bean from the prototype, then should I get a prototype or a singleton?

	https://www.baeldung.com/spring-inject-prototype-bean-into-singleton
	Solution
	By default, Spring holds a reference to the real object to perform the injection. Here, we create a proxy object to wire the real object with the dependent one.
	Each time the method on the proxy object is called, the proxy decides itself whether to create a new instance of the real object or reuse the existing one.
	To set up this, we modify the Appconfig class to add a new @Scope annotation:
	@Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE, proxyMode = ScopedProxyMode.TARGET_CLASS)
	
8)what is entity? how one-one one-to-many mappings are done?


	WIPRO
-----------------
1) What is 'mappedBy' in Hibernate? What is it's significance?
2) How did you configure Second level Cache in Hibernate?
3) What is 'Scope' of a spring bean?  How many scopes are there of a spring bean?
4) If I inject a prototype scoped bean in a singleton bean, and then fetch the prototype bean from
the singleton bean from the prototype, then should I get a prototype or a singleton?
5) In the above question,how should I get a prototype of the injected bean, if it is singleton in the
first bean?
6) How should I map a requerement with a design decision? What is the name of the document template?
7) Is static inner class possible? Is static outer class possible?
	A class with in another class is known as inner class, you cannot declare a class static unless it is an inner class. 
	A static inner class is just like other class variables. 
	You can access it (static inner class) without instantiation
8) How can we customize java object serrialization? or is there a hook for cross cutting the java object serialization process?




	IMPETUS
-----------------
9) There are 5 files, total 10 GB in size. I have a RAM, which is 1 GB in size. I want to read, then sort and then write the 
files, so that the smallest records come to the first file, and the largest records come to the last
file. How can I do that?
10) What is optimistic locking?
11) What is transaction isolation? How many types of transaction isolation?
12) What is the default transaction isolation level of hibernate?
13) What is Phantom Read?
14) There are two tables, two tables have same columns. I want to identify the records, which are missing from the second table. Hwo should I do that?
15) What is a 'volatile' key word?
16) what is JVM? What is JRE? What is JDK? What is the difference between JDK, JRE and JVM?
17) Is it possible to run multiple JVMs on the same system?
18) How do you start a JVM?
19) What is the difference between a state pattern and a strategy pattern?
20) Where and how did you use state pattern? ( Probably, they are interested to know the Business Delegate scenario )/ Collections.sort(), here based on the comparator logic the sorting can be done.
21) What is a hash code? How does a hash code work?
22) What is the return type of put(Object) in collections?
23) If I want to insert duplicate Strings in keys of a HashMap, how should I change the String class?
24) How should you manage a transaction in simple JDBC? 
25) What is autocommit?
26) What is JIT ( Just in time compiler? )



	IBM
-----------------------
1) What is collections API? Are the collection classes Synchronized?
2) How can we make the collection classes synchronized?
3) How to configure Transaction management in Spring with XML?
4) What is aggregation? What is composition in Java?
	1. Dependency: Aggregation implies a relationship where the child can exist independently of the parent. 
	For example, Bank and Employee, delete the Bank and the Employee still exist. 
	whereas Composition implies a relationship where the child cannot exist independent of the parent. 
	Example: Human and heart, heart don’t exist separate to a Human
	2. Type of Relationship: Aggregation relation is “has-a” and composition is “part-of” relation.
	3. Type of association: Composition is a strong Association whereas Aggregation is a weak Association.
5) What is the difference between composition and aggregation in java?
6) What is SingleThreadModel? How to use? Merits and demerits of STM?
7) About Servlet lifecycle? What is the init() method? What is the method signature of the init() method?
8) What are the different scopes in Spring? what is a singleton scope? Is it same as the JDK singleton design pattern?
9) In struts, what is a redirect? How is a redirect different from a forward?
10) How does a HashMap work? How to maintain a collection of unique elements? What will happen if I want to
	insert duplicate elements in a java.util.Set? 
11) What are the benefits of using Hibernate? ( It is not about the syntax, but about benefits from architects point of view )
12) What is the difference between Collection and Collections?
13) How can I sort a Collection?
14) What is the difference between ClassNotFoundException and NoClassDefFoundError? Which one is more fatal?
15) What are the different types of injection strategy available with Spring? ( Setter injection and Constructor injection )
16) Which injection mechanism is more preferable, and why?
17) What is the difference between a file include and a jsp:include?
18) ClassCastException is a checked exception or unchecked exception?


	PwC
-----------------------------------
1) How will you select the 3rd highest 'Marks Obtained' in the below table?

	STUDENT ID |	STUDENT NAME | 	STUDENT MARKS
-------------------------------------------------------
1		   | xs		     |	39
2		   | RT		     |	93
3		   | YU		     |	50
4		   | UY		     |	25
5		   | UJ		     |	10

Solution 1
----------
SELECT
    TOP 1 marks
FROM
    (SELECT DISTINCT TOP 3 marks FROM student ORDER BY marks DESC) a ORDER BY marks

Solution 2
----------
SELECT mark
FROM student
GROUP BY mark
ORDER BY mark DESC
LIMIT 2 , 1


2) What are the different lifecycle stages of a JSF managed bean?
	In execute phase, when first request is made, application view is built or restored. 
	For other subsequent requests other actions are performed like request parameter values are applied, 
	conversions and validations are performed for component values, 
	managed beans are updated with component values and application logic is invoked.

	The execute phase is further divided into following subphases.

	Restore View Phase
	Apply Request Values Phase
	Process Validations Phase
	Update Model Values Phase
	Invoke Application Phase
	Render Response Phase

	SAPIENT
---------------------
1) What is ThreadPoolExecutor?
2) How to create a threadpool of objects threads, which can be run? 
	How can you sure the re-usability of threads, in the thread pool?
3) What are the different inheritence strategies in hibernate? Define and elaborate 
	each inheritance strategy? What is the difference between table-per-class and table-per-subclass?
4) What are database procedures?
5) How to return a collection of object from a database cursor?
6) What is a cursor?
7) What is a trigger? How to write a trigger in a database?
8) What is a Concurrent HashMap?
9) What is the difference between TreeSet and HashSet?
10) How to write an annotation ? What are the attribues of annotation?
11) What is a meta annotation?
12) If we have a composite primary key on Table-A, How can Table-B have foeighn key to one of the primary keys on table-A?
13) What are the differences between TreeSet and HashSet? 
14) Say, Employee class overrides the hashCode() method and returns '1'. Now, if we add 100 employee objects to a HashSet, what will happen?
	What will be the difference of impact if we do the same insertion in a TreeSet?
15) Did I use Web-Service? Which web service? SOAP/WSDL and Jax-WS implementations.
16) Say, we have two tables. Employee table and Department table. Employee table and department tables are joined with a column, 'department_id'.
	'department_id' is the primary key in Department table and a forein key in Employee table. Now, many employees have department_id=null.
	Now, we need to show the text 'Department Is not available' in the column, 'department_id' , for those employees who have department_id=null
	and the valid department_id, for the employees for whom the 'department_id' is available. How should we do this?
17) In spring mvc, how to get values from front end views to the back-end controllers?
18) What is a singleton design pattern?
19) While designing a module, what are the design principles, that we have in consideration?
20) If we deploy singleton class in a multiclastured environment, then how can we ensure that the singleton instance will be the same across
	all the load balanced clusteres of the servers in different nodes of the multiclustered environment?

	
	SAPIENT
--------------------
1) Password - S@p!entGMCJexe#1 
2) Start time - 3:45 PM


	eRevMax
-----------------------------
1) What is a ConcurrenthashMap? How to Use?
2) What is a LinkedHashMap? What is the 'Link' in LinkedHashMap?
3) What is a hashMap? 
4) We want Employee objects as keys of a HashMap. What will happen if we do not implement hashCode() and equals() in the Employee Class?
	Shall we be able to insert all the employee objects in the Map object?
5) In SQL, what is a 'having' clause? What is a 'Group By' clause in an SQL query?
6) How should you select the employees, who have average age, greater than 25?
7) What is Spring AOP? How should you use AOP?
8) What is Generics in java? How and when did you use it?
9) What is Servlet life cycle? What are the servlet life cycle methods? 
10) If three threads are accessing a servlet at a single point of time, how many servlet instances will be there?
11) In thread, what is wait(), notify() and notifyAll() ?
12) What is the difference between sleep() method and wait() method?
	
	Wait() method releases lock during Synchronization. Sleep() method does not release the lock on object during Synchronization. 
	
13) What is a Monitor in java? Is it a seperate class? How does a monitor manages a java object? Should there be different java monitors
	for different objects in a java heap? This way, shall there be 10,000,000 monitor objects, if there are 10,000,000 objects in the
	heap?
14) Did you work with different load balancers, clusters etc?
15) In which components of a class can we use synchronization?
15) If there are two synchronizad methods in a class, then can we call both the methods at a same time?
16) How will you decide, which methods to make synchronized in a class?


hexaview
-----------------
1)Write a code for printing number of charecter occourence of given string?
	https://www.geeksforgeeks.org/java-program-to-count-the-occurrence-of-each-character-in-a-string-using-hashmap/
2)Write code to sum up values of an integer array with stream api?
3)What are the J2ee design patterns you know?
4)What is filter pattern?
5)How HashMap works internally?
6)What is lambda function?
7)What is stream API?
8)Have you worked on any MQ ?
9) Write a programm to count occourence of a charecter in a String?

cognome
------------------------
1) How hashMap works?
3) What is hash collition?
2) How log comes into picture for calculating time complexicity of a program? 
	(This is an algorithm to break a set of numbers into halves, to search a particular field(we will study this in detail later). Now, this algorithm will have a Logarithmic Time Complexity. The running time of the algorithm is proportional to the number of times N can be divided by 2(N is high-low here). This is because the algorithm divides the working area in half with each iteration.
3) What is Rest Webservice?
4) How state of an object can be maintained in rest web service?	


cerner corporation
-----------------------------
1) How you are calling other services from your microservices? tell me about the configuration.
2) How load balancing is configured in your microservice architecture? 
3) How will the api gateway act when one of your microservice is down?
4) What is parallelStream and map and flatMap?
5) How to convert List of String to List of Integer in Java 8 with stream?
	https://www.geeksforgeeks.org/program-to-convert-list-of-string-to-list-of-integer-in-java/
6) What is Generics? What is wild card in Generics? Whta is bounded context?
	https://www.geeksforgeeks.org/wildcards-in-java/#
	https://www.geeksforgeeks.org/generics-in-java/
7) What is builder pattern?
8) Whta is factory and singleton pattern?
9) Name some of the end points of actuator?

	/health - Returns application health information.
	/mappings - Displays a collated list of all @RequestMapping paths
	/loggers - The configuration of loggers in the application
	/metrics - It shows several useful metrics information like JVM memory used, system CPU usage, open files, and much more.
	/logfile - Returns the contents of the logfile if logging.file.name or logging.file.path properties have been set.
	/beans - Returns a complete list of all the Spring beans in your application.
	/env - Returns list of properties in current environment
	/caches - It exposes available caches.

10) Difference between concurrentHashMap and ShyncroNizedHashMap?
11) What is @Spy in Junit? difference between @Mock and @spy ? What is @InjectMocks?

	Mocks: Mocks are the clone or dummy objects that simulate the behavior of the real objects.
	Spies: Spies are the partial mock objects of the real one.
	https://www.softwaretestinghelp.com/mocks-spy-mockito/#2_Mock_creation_with_Annotations
12) What is @profile in springBoot?
13) What is marker interface?
14) Why we use serialization in java?
16) Which REST calls are idempotent?
	Idempotence is a funky word that often hooks people. Idempotence is sometimes a confusing concept, at least from the academic definition.

	From a RESTful service standpoint, for an operation (or service call) to be idempotent, clients can make that same call repeatedly while producing the same result. In other words, making multiple identical requests has the same effect as making a single request. Note that while idempotent operations produce the same result on the server (no side effects), the response itself may not be the same (e.g. a resource's state may change between requests).

	The PUT and DELETE methods are defined to be idempotent. However, there is a caveat on DELETE. The problem with DELETE, which if successful would normally return a 200 (OK) or 204 (No Content), will often return a 404 (Not Found) on subsequent calls, unless the service is configured to "mark" resources for deletion without actually deleting them. However, when the service actually deletes the resource, the next call will not find the resource to delete it and return a 404. However, the state on the server is the same after each DELETE call, but the response is different.

	GET, HEAD, OPTIONS and TRACE methods are defined as safe, meaning they are only intended for retrieving data. This makes them idempotent as well since multiple, identical requests will behave the same.
17) What are the best practices we can follow while desiging microservices?
18) What is cascading in hibernate and how we can apply the same?
19) What happens if we try to insert null key in treeMap?
	TreeMap sorts elements in natural order and doesn't allow null keys because compareTo() method throws NullPointerException if compared with null.
20) Default size of Vector and complexcity of unordered collection in java?
21) Which is ordered collection between List , Set and Map? (Ans- List)
22) How treeSet stores elements internally?
	whenever you are adding element to the TreeSet object , it works just like HashSet , The only difference is that instead of HashMap here we have TreeMap object in the constructor.
23) How will you find duplicate dependency in project configured with maven?
	dependency:analyze-duplicate Analyzes the and tags in the pom.xml and determines the duplicate declared dependencies.
	mvn dependency:analyze-duplicate

Virtusa
--------------------------------
0) Tell me about your current project architecture?
1) Why to chose microservice in your current project?
2) How we can achive asynchronus messing in microservice architecture?
3) What is docker image and what role it playes in container technology?
4) How we can achive security in REST api?
5) How security is implemented in your current project?
6) In terms of memory what is the changes brought in java 8?
	PremGen: MetaData information of classes was stored in PremGen (Permanent-Generation) memory type before Java 8. 
	PremGen is fixed in size and cannot be dynamically resized. It was a contiguous Java Heap Memory.
	MetaSpace: Java 8 stores the MetaData of classes in native memory called 'MetaSpace'. It is not a contiguous Heap Memory and hence 
	can be grown dynamically which helps to overcome the size constraints. This improves the garbage collection, auto-tuning, and de-allocation of metadata.
	MetaspaceSize and MaxMetaspaceSize – we can set the Metaspace upper bounds.
	MinMetaspaceFreeRatio – is the minimum percentage of class metadata capacity free after garbage collection
	MaxMetaspaceFreeRatio – is the maximum percentage of class metadata capacity free after a garbage collection to avoid a reduction in the amount of space.

7) What other new features of java 8 have you used?
8) Explain Thread Executor service for achiving asynchronus processing?
9) What is ScheduledExecutorService? 
10) Can you write a program with ScheduledExecutorService?
	https://www.baeldung.com/java-executor-service-tutorial
10) Write a program to print the sum of consicutive sum of character values in a given string ? e.g. string= ABCDEEEFG , A=1,B=2,C=3,D=4,E=5 , then output=ABCD20FG 
11) Tell me about some of the flaws/vernarebilities of veracode scan?
12) What about recent log4j vernarebiliti? ( exposing JNDI in log which can be accessed and manipulated by suspicious attacker)
13) What is api gate way in microservice?
14) What is hibernate first and sceond level cache?
15) Implement a real life scenario for vending machine - implement with builder design pattern.


LabVantage
------------------------------------------------
1)Can we override private and static methods? NO

2)We have overloaded functions and we are passing null. 
Which function will be called and what will be the output of the program?

public class Test {
	public static void main(String[] args) {
		foo(null);
	}
	public static void foo(Object o) {
		System.out.println("Object argument");
	}
	public static void foo(String s) {
		System.out.println("String argument");
	}
}

Ans: According to Java specs, in case of overloading, the compiler picks the most specific function. 
Obviously String class is more specific than Object class, hence it will print “String argument”.

3)Please sort an array in decending order : int[] myArray = {8,5,2,9,6};

Ans:
private static void sortArray() {
// declaring and initializing the array
int[] arr = new int[] {8,5,2,9,6};

int temp = 0;

	// traverse 0 to array length
	for (int i = 0; i < arr.length - 1; i++) {

		// traverse i+1 to array length
		for (int j = i + 1; j < arr.length; j++) {

			// compare array element with
			// all next element
			if (arr[i] < arr[j]) {

				temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}
	// print all element of array
	for (int value : arr) {
		System.out.println(value + " ");
	}
}

4)How to get distinct characters and their count in a String?
Input = "abcdABCDabcd";
Output =  {a=2, A=1, b=2, B=1, c=2, C=1, d=2, D=1}

Ans: with stream - string.chars().distinct().count();

private static void checkOccourenceOfCharaterInString() {
String s = "abcdABCDabcd";
Set<Character> set = new HashSet<Character>();
for (int i = 0; i < s.length(); ++i){
	char ch = s.charAt(i);
	if ((ch >= 65 && ch <= 90) || (ch >= 97 && ch <= 122))
		set.add(s.charAt(i));
}
System.out.println(set.size());
}

5)Java program to check if the given number is Prime?

Ans:
private static boolean isPrime(int n)
{
	// Corner case
	if (n <= 1)
		return false;

	// Check from 2 to n-1
	for (int i = 2; i < n; i++)
		if (n % i == 0)
			return false;
		else
			return true;

	return true;
}

Ans: A prime is a natural number greater than 1 that has no positive divisors other than 1 and itself. 
Examples of first few prime numbers are {2, 3, 5,
% = Modulus operator , devides two numbers and returns the operator

6)Java Program to check if a vowel is present in the string?

String str = "GeeksForGeeks";
str = str.toLowerCase();

// toCharArray() is used to convert
// string to char array
char[] chars = str.toCharArray();

int count = 0;

for (int i = 0; i < str.length(); i++) {
	// check if char[i] is vowel
	if (str.charAt(i) == 'a' || str.charAt(i) == 'e' || str.charAt(i) == 'i' || str.charAt(i) == 'o'
			|| str.charAt(i) == 'u') {
		// count increments if there is vowel in
		// char[i]
		count++;
	}
}

// display total count of vowels in string
System.out.println("Total no of vowels in string are: " + count);

7)What will be the output of the program?
String x = "abc";
String y = "abc";
x.concat(y);
System.out.print(x.concat(y));


8)EMP table
empid empname deptid salary
E1	  Saibal  D1     1000000
E2    Bimal   D1     1200000
E3    Pradeep D1     3000000
E4    Tapas   D2     4500000
E5    Kamal   D2     90000000

Find the number of employees in each department along with the department code. Below is the required output
Deptid Number of employees
D1     3
D2     2


SELECT deptid, COUNT(*) FROM EMP GROUP BY deptid;

9) What is singleton design pattern ?Write a singleton class?

10)Write a program to conver list to set?
Ans: 
HashSet constructor can take another collection object to construct a new set containing the elements of the specied list.
Using stream - list.stream().collect(Collectors.toSet());

ITC Infotech
-------------------------
1) What are the new features of JAVA 8?
2) Can we override static methods in java?
3) What is polymorphism? (Method Overloading: When there are multiple functions with the same name but different parameters)
4) What is hibernate?
5) What is state in hibernate?
	
	State of Objects in Hibernate
	There are three states of the entity object using by the Hibernate API. 
	An object can have three states: transient, persistent and detached. 
	Transient State - Object before association with session it is in Transient. 
	Persistent State - When associated with session it is in Persistent. 
	Detached State - Detaching from the session it is in  Detached.	
	
6) What is @componentScan and @component?
7) What is rest full api/webservice?
8) How we can create microservices?
9) What is stream api?
10) Write a query to find highest salary from employee table?
    SELET TOP 1 SALARY FROM EMPLOYEE;
11) Difference between arrayList and LinkedList?
12) HashMap internal working?
13) What is design pattern in java?


Capgemini offshore 
-----------------------------------------
1) Java program for list convert  in map with the help of Collectors.toMap() method? Explain Collectors.groupingBy
	https://www.geeksforgeeks.org/program-to-convert-list-to-map-in-java/
2) What is supplier ,consumer and predicate interface in java 8?
	https://javabydeveloper.com/java-8-supplier-functional-interface-with-examples
3) Explain grouping function in stream?
	https://www.geeksforgeeks.org/collectors-groupingby-method-in-java-with-examples/
4) How hashset works internally and doesnot take duplicate objects?
	https://www.geeksforgeeks.org/internal-working-of-sethashset-in-java/
	Now as you can see that whenever we create a HashSet, it internally creates a HashMap and if we insert an element into this HashSet using add() method, 
	it actually call put() method on internally created HashMap object with element you have specified as it’s key and constant Object called “PRESENT” as it’s value. 
	So we can say that a Set achieves uniqueness internally through HashMap.

5) Explain different design patterns of microservice?
6) What are the things we will check when starting a microservice development?
6) How authentication can be done in microservice?
7) What is service registry in microservice?
8) What is Creational design pattern ? 
9) Explain Real life example of factory pattern with a document generator machine which produced different format of documents e.g. pdf, excel, word etc?
10) What is strategy design pattern?
	https://www.tutorialspoint.com/design_pattern/strategy_pattern.htm
11) How distributed session management is done in microservice? (Explained with redis cache)
	https://www.javainuse.com/spring/springboot_session_redis
	Spring Session Data Redis - provides SessionRepository and ReactiveSessionRepository implementation backed by Redis and configuration support
12) What is @Profile and @ConfigurationProperty in springboot?
	https://www.appsdeveloperblog.com/using-spring-boot-configurationproperties-and-profile/
13) Can we debug lambda function? how to improve quality of a lambda function or review a lambda function?
14) Difference between hibernate load() and get() method?
	Get() method return null, If no row is available in the session cache or the database for the given identifier whereas load() method throws object not found exception. 
	If you are not sure that object exist then use get() method?
	If you are sure that object exist then use load() method?
15) Can we integrate and define viewResolver in springboot?
	https://stackoverflow.com/questions/63047573/internal-resource-view-resolver-not-working-in-spring-boot
16) How we can execlud default tomcat server from springboot? 
17) What is parent and child POM? What is BOM?
	https://howtodoinjava.com/maven/maven-parent-child-pom-example/
	BOM stands for Bill Of Materials. Maven lets us define the versions of the dependencies or transitive dependencies in a separate POM. A BOM package is a POM only jar file that is used to control the versions of a project's dependencies and provide a central place to define and update those versions.

	
HCL Interview questions
--------------------------------------------
1) explain @Async annotation in springbpot?
2) What is consumer supplier interface?
3) how to handle different request mapping and http methods in spring boot?
4) How to write custom methods for fetching data in jpaRepository?
5) Write a query for getting the details of student having highest mark?
6) What is aggregate function in sql?
7) what is sealed class in java? What is restore in java?
8) How to handle asynchronous processing in spring boot?
9) Given a string , if length of string is less than 10 , fill the remaing characters with star and print without using loop?
10 ) what is docker?
12) How you have implemented ci/cd with bamboo?
13) How you have used ansible with openshift?
14) What is stream api?
15) How to create an Optional and check for value in it?
16) How to handle validation of request in rest controller?
17 ) What is strictfp in java?
18 ) Explain different database design pattern of microservice?
19 ) given a realtime shopping cart application , then explained different domain and microservices, such as inventory service, cart service, order service and payment service, now while placing a order if payment got failed , how to rollback all the other transaction triggered by other services?
https://dzone.com/articles/microservices-using-saga-pattern
20) Explain dependency injection in spring with types?
21) Have you used any design pattern in your application? Explain singleton deaign pattern?
22) How will you implement authentication for microservice with spring security?
23) How JWT works?
24) How we can accept request headers in spring rest controller? - with @RequestHeader
25) What is BDD and TDD documents? 
26) What is UML diagram?
27) What is association in class diagram?
28) How to check performence issues in web application?
29) What is memory leak and garbage collection in java?
30) How to write custom immutable class?
	The class must be declared as final so that child classes can’t be created.
	Data members in the class must be declared private without any setter methods so that direct access is not allowed.
	Data members in the class must be declared as final so that we can’t change the value of it after object creation
40) What is normalization in database? What is left join?


Wipro Interview
-----------------------------
1) WHat is docker ? explain docker run and docker build command?
2) What is map function in strem API?
3) Difference between @Controller and @RestController?
4) Explain some Spring boot annotations?
5) Whta is the difference between Collection and Stream?
6) What are the disadvantages of using microservice?
7) What is SAGA design pattern?
8) Have you worked on any MQ(e.g. Kafka , RabbitMQ)?
9) WHta is topic?

MindTree
------------------------------
1) What are the new features of java 8?
2) What is default method and why it is introduced?
3) whta is the difference between map and filter?
4) How hashmap works internally?
5) What is the difference between hashmap and synchronized hashmap?
6) What is the difference between rest controller and controller?
7) How security is implemented in your current project?
8) What are the benifits of spring boot?
9) What are the disadvantages of microservice?
10) what is the difference between jpa and hibernate?
11) What is the difference between CurdRepository and JPARepository?
	https://www.geeksforgeeks.org/spring-boot-difference-between-crudrepository-and-jparepository/
12) WHta is fallback mechanism in microservice and how microservice communicate with each other?
13) Write a simple microservice which update user account details?
14) Whta is dependency injection in spring IOC?
16) Why to use optional in java 8?
17) Whta is distributed tracing and centralized loggging(log agreegation) in micro service?
18) What is @NamedQuery in CurdRepository?
19) Difference between persist() and save() and saveOrUpdate() and update() in hibernate?
	
	save() returns an identifier, and if an INSERT has to be executed to get the identifier, this INSERT happens immediately, no matter if you are inside or outside of a transaction. This is not good in a long-running conversation with an extended Session/persistence context.

	persist() is used on transient objects. It makes a transient instance persistent. However, it doesn't guarantee that the identifier value will be assigned to the persistent instance immediately, the assignment might happen at flush time.It also guarantees that it will not execute an INSERT statement if it is called outside of transaction boundaries. This is useful in long-running conversations with an extended Session/persistence context.
	
	The main difference between them is that save() is Hibernate-proprietary, whereas persist() is a standard JPA method. Additionally, save() is guaranteed to assign and return an ID for the entity, whereas persist() is not.
	
	update() is used to attach a detached entity to the session.

	saveOrUpdate() is used to either save or update an entity depending on the state (new or detached) of the entity. This method calls save() or update() based on the operation. If the identifier exists, it will call update method else the save method will be called. 	
	
20) Difference between @PathVariable @RequestParameter in spring boot?
21) What is @Conditional annotation in springboot?
22) What is horizontal scaling and vertical scaling? whta is static and dyanamic scaling?

	Vertical Scaling: When new resources are added in the existing system to meet the expectation, it is known as vertical scaling. 
	Vertical scaling is based on the idea of adding more power(CPU, RAM) to existing systems, basically adding more resources.
	
	Horizontal Scaling: When new server racks are added in the existing system to meet the higher expectation, it is known as horizontal scaling. 
	Horizontal scaling is based on the idea of adding more machines into our pool of resources
	
	Basically, the application dynamically adds or removes servers from the application infrastructure in order to balance the needs of the application against the costs of running the application. Amazon Web Services, for example, has an Auto Scaling service that performs this capability.
	
23) Real life example of Singleton design pattern?
	
	When you use Logger, you use Singleton pattern for the Logger class. In case it is not Singleton, every client will have its own Logger object and there will be concurrent access on the Logger instance in Multithreaded environment, and multiple clients will create/write to the Log file concurrently, this leads to data corruption.
	
	Configuration File: This is another potential candidate for Singleton pattern because this has a performance benefit as it prevents multiple users to repeatedly access and read the configuration file or properties file. It creates a single instance of the configuration file which can be accessed by multiple calls concurrently as it will provide static config data loaded into in-memory objects. 
	
	for making the connection object singleton in jdbc
	public class DatabaseConnection {  
    private static Connection con = null;  
    static
    {
        String url = "jdbc:mysql:// localhost:3306/org";
        String user = "root";
        String pass = "root";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(url, user, pass);
        }
        catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }
    public static Connection getConnection()
    {
        return con;
    }

24) What is stored procedure and view in databse?
25) How security is handled in Rest api?
26) How will you deploy your services in openshift?


Mphasis
--------------------------
1) How to Handle Singleton Classes in Distributed Environment?
	https://www.youtube.com/watch?v=xVWPIdjngOw
	we have to make our singleton class serializable and implement the Serializable interface and declare the serialVersionUid for the class.In this way the singleton instance can be stored in a file system and can be used by other JVMs. Here we need to create readResolve method inside the singleton class which will be called by different JVM in distribute environment, so that every time deserialization happens it gives the same object across the distributed environment.
	public Object readResolve(){
		retuen getInstance();
	}
	
2) Tell me a scenarion where you have applied the abstruct factory pattern in your project?
3) How to call other microservices from one microservice?
4) what is component in anguler JS?
5) How we can define the number of pod replicas in openshift?
6) What are the benifits of openshift?
7) How will you deploy your services in openshift?
8) How will you do the database transaction via microservice?
9) What type of functional interface filter operation in stream api consumes? (Predicate)
10) What is lambda expression? what is -> in lambda expression? (It is used to link arguments-list and body of expression.) 
11) How will you convert a web project into a springboot project?


IRISH Software 
-------------------------
1) String s4 = "java";
   String s5 = new String("java");
   How many String object is created ? ans- only1
2) How to create immutable class?
	There are many immutable classes like String, Boolean, Byte, Short, Integer, Long, Float, Double etc. In short, all the wrapper classes and String class is immutable. We can also create immutable class by creating final class that have final data members.
	The instance variable of the class is final i.e. we cannot change the value of it after creating an object.
	The class is final so we cannot create the subclass.
	There is no setter methods i.e. we have no option to change the value of the instance variable.
3) What is CountDownLatch in multi threading?
4) What is TreeSet and LinkedHashSet? and difference between them?
	
	If you want to sort the elements according to some Comparator then use TreeSet
	TreeSet uses TreeMap internally to store objects
	
	If you want to maintain the insertion order of elements then you can use LinkedHashSet
	LinkedHashSet uses LinkedHashMap internally to store objects
5) What is builder pattern? when to use?
6) difference between == and === in jsp?
7) What is doctype in html?
8)	What is bootstrap in anguler?
9)	what is lazy and egar loading in hibernate?
10) What is cache in hibernate?
11) What is two way binding in anguler?
12) can we debug jsp code?
13) Explain spring MVC workflow?
13) Difference between accept and content-type?
14) what is fail fast and fail safe Iterator in java?
15) What is try with resources?
16) What is the difference between concurrentHashMap and ShyncronizedHashMap? and which will perform better?
	The main difference between these two is that ConcurrentHashMap will lock only portion of the data which are being updated while other portion of data can be accessed by other threads. However, Collections.synchronizedMap() will lock all the data while updating, other threads can only access the data when the lock is released. If there are many update operations and relative small amount of read operations, you should choose ConcurrentHashMap.
17) What is the difference between Error and Exception in java?
18) What are the hibernate performance issues?
19) What is N+1 select problem in hibernate?
	Using FetchType.EAGER either implicitly or explicitly for your JPA associations is a bad idea because you are going to fetch way more data that you need. More, the FetchType.EAGER strategy is also prone to N+1 query issues.
	Unfortunately, the @ManyToOne and @OneToOne associations use FetchType.EAGER by default, so if your mappings look like this:
	https://stackoverflow.com/questions/97197/what-is-the-n1-selects-problem-in-orm-object-relational-mapping
20) What are the states of hibernate objects?

NTT Data
------------------------------
1) What are the new features added in java 8 along with memory management change?
2) What is serializable and Externalizable?
	https://howtodoinjava.com/java/serialization/externalizable-vs-serializable/
	https://www.baeldung.com/java-externalizable
3) How to create custom Immutable class and make the list declered inside that also immutable?
	https://www.journaldev.com/129/how-to-create-immutable-class-in-java
	Declare the class as final so it can’t be extended.
	Make all fields private so that direct access is not allowed.
	Don’t provide setter methods for variables.
	Make all mutable fields final so that its value can be assigned only once.
	Initialize all the fields via a constructor performing deep copy.
	Perform cloning of objects in the getter methods to return a copy rather than returning the actual object reference.
4) What is the output of below program?
	Map<String,String> tMap = new HashMap<>();
	tMap.put(null, "t1");
	tMap.put(null, "t2");
	tMap.put(null, null);	
	System.out.println(tMap.get(null));
ans- null
5) What is the output of the below program?
public class ClassA {
	public void show() {
		System.out.println("Inside A");
	}
}
public class ClassB extends ClassA {	
	@Override
	public void show() throws IOException {
		System.out.println("Inside B");
	}
	public static void main(String[] args) {		
		ClassA a = new ClassB();
		a.show();
	}
}
ans- Exception IOException is not compatible with throws clause in ClassA.show() , also neew to add 'throws IOException' in main() signature.
6) With stream how will you filter the names starting with S from a list of names?
	Stream stream = list.stream().filter(name -> name.startsWith("J"));
7) What is Lock and ReentrantLock in java?
	https://winterbe.com/posts/2015/04/30/java8-concurrency-tutorial-synchronized-locks-examples/
8)What is deep copy ans shallow copy in java?
	In shallow copy, only fields of primitive data type are copied while the objects references are not copied. Deep copy involves the copy of primitive data type as well as object references.
	
	
L&T Infotech
------------------------
1) Tell about your current project architechture and business functionalities?
2) How auto scaling is handleed in your openshift container platfrom? (Based on cpu utilization)
3) What is feign client?
4) What are the microservices design patterns?
5) How to implement many to many relationship in hibernate?
6) How to implement dynamic sql query in hibernate/spring/jpa so that we can bypass sql injection attack?
7) How to implement the tiny url to invoke your back end application?
8) How to create custom Immutable class and make the list declered inside that also immutable?
	https://www.journaldev.com/129/how-to-create-immutable-class-in-java
	Declare the class as final so it can’t be extended.
	Make all fields private so that direct access is not allowed.
	Don’t provide setter methods for variables.
	Make all mutable fields final so that its value can be assigned only once.
	Initialize all the fields via a constructor performing deep copy.
	Perform cloning of objects in the getter methods to return a copy rather than returning the actual object reference.
9) How exception is handled in spring-boot rest api? (ControllerAdvice)
10) What is interceptor in spring-boot?
	https://www.tutorialspoint.com/spring_boot/spring_boot_interceptor.htm
11) What is spring security and how to implement it?
12) What is authorization bypass vernarebilities and OWASP?
13) What is executor service?
14) How async processing is done in spring-boot?
15) What is retry in microservice?
16) What is service discovery?

Accentutre project interview
-----------------------------
1) Advantage of using Interface? which is better to use Interface or Abstruct class?
2) What happens if two interface declares same method and concrete class tries to implement the same?
3) What is better to use Interface or Abstruct class?
4) What is functional interface?
5) How to use comparator in java 8 with code signature?
	https://www.baeldung.com/java-8-sort-lambda
6) When to use comparator and comparable?
7) What is OUTER , LEFT OUTER and INNER join?
8) What is cursor , stored procedure and constrains?
	https://www.geeksforgeeks.org/what-is-cursor-in-sql/?ref=gcse	
9) how to filter values in lambda functions? 
10) How load balancing is done in spring boot?
11) What is @controlleradvice in springboot?
12) How memory management and garbage collection is done in java?
13) What is heap memory and stack memory?

	Java Heap Space is used throughout the application, but Stack is only used for the method — or methods — currently running. The Heap Space contains all objects are created, but Stack contains any reference to those objects. Objects stored in the Heap can be accessed throughout the application.
	
14) Difference between shynchronized and concurrent  Map?
15) What is system.exit() in java?
16) how serialization is done in java?
17) what is @Conditional?
18) Can we catch OutOfMemoryError? how to increase the JVM memory?
	https://rollbar.com/blog/how-to-handle-outofmemoryerror-exceptions-in-java/
	Since the java.lang.OutOfMemoryError descends from the Throwable class, it can be caught and handled in application code. In some cases, especially when the lines of code that may be causing the OutOfMemoryError are known, it can be a good idea to handle the error. Where it’s possible to do so, it is best practice to clean up the resources, log the reason for the failure and exit the program gracefully. 
19) Write a query to get the manager names from below table?

		EMPLOYEE TABLE
		----------------
		EMP ID | EMP NAME | MANAGER ID
		-------------------------------
		1           SURAJ      3
		3           HIRAN      4
20) How filter can be used to filter certain objects from a list of objects based on certain property of object?
21) How security is implemented in your current project? is the security is common for all the microservices?
22) What will happen if we synchronize only a method in a class and mutiple thread tries to access the method?
	When a thread invokes a synchronized method, it automatically acquires the lock for that object and releases it when the thread completes its task.
23) Can a child interface which extends the parent interface have the same method? and can it be implemented in the class which is implementing both the interfaces? - Yes , except when the implementation is present in both the interfaces as form of default method , in that case super need to be used for invoking the exact implementaion.

SPEICE MONEY
--------------
1) There are thow thread working and getting data from file and writing in another file , it will write 1,2,3,4,... once by one . One thread will write the odd numbers and other will write the even numbers. How to achive this problem.
 Ans: https://www.geeksforgeeks.org/print-even-and-odd-numbers-in-increasing-order-using-two-threads-in-java/
2) What is split iterator?
3) What is fail fast and fail safe?
4) What will happen if I put a prototype scope bean inside a singleton scope bean? is the reverse scenario possible?
5) What @Conditional annotation does in spring?
6) What is @ViewChild in anguler?
7) What does JPA merge() method do?
8) Have you used any api gateway in your application ? if so, what are the advantages and disadvantages of it in microservice architecture?
